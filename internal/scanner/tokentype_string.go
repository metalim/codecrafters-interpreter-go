// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package scanner

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INVALID-0]
	_ = x[EOF-1]
	_ = x[LEFT_PAREN-2]
	_ = x[RIGHT_PAREN-3]
	_ = x[LEFT_BRACE-4]
	_ = x[RIGHT_BRACE-5]
	_ = x[COMMA-6]
	_ = x[DOT-7]
	_ = x[MINUS-8]
	_ = x[PLUS-9]
	_ = x[SEMICOLON-10]
	_ = x[STAR-11]
	_ = x[LESS-12]
	_ = x[MORE-13]
	_ = x[EQUAL-14]
	_ = x[EQUAL_EQUAL-15]
	_ = x[BANG-16]
	_ = x[BANG_EQUAL-17]
}

const _TokenType_name = "INVALIDEOFLEFT_PARENRIGHT_PARENLEFT_BRACERIGHT_BRACECOMMADOTMINUSPLUSSEMICOLONSTARLESSMOREEQUALEQUAL_EQUALBANGBANG_EQUAL"

var _TokenType_index = [...]uint8{0, 7, 10, 20, 31, 41, 52, 57, 60, 65, 69, 78, 82, 86, 90, 95, 106, 110, 120}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
